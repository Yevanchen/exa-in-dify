# .github/workflows/test.yml
name: Basic Test Workflow

on:
  push:
    branches: [ main ]  # Or your main branch name

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Print working directory
        run: |
          pwd
          ls -la

      - name: Download CLI tool
        run: |
          # Create bin directory
          mkdir -p $GITHUB_WORKSPACE/bin
          cd $GITHUB_WORKSPACE/bin

          # Download CLI tool
          wget https://github.com/langgenius/dify-plugin-daemon/releases/download/0.0.6/dify-plugin-linux-amd64
          chmod +x dify-plugin-linux-amd64

          # Show download location and file
          echo "CLI tool location:"
          pwd
          ls -la dify-plugin-linux-amd64

      - name: Get Version from manifest
        id: get_version
        run: |
          VERSION=$(grep "^version:" manifest.yaml | cut -d' ' -f2)
          echo "Plugin version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Package Plugin
        id: package
        run: |
          # Use the downloaded CLI tool to package
          cd $GITHUB_WORKSPACE
          PACKAGE_NAME="exa-${{ steps.get_version.outputs.version }}.difypkg"
          ./bin/dify-plugin-linux-amd64 plugin package . -o "$PACKAGE_NAME"

          # Show packaging result
          echo "Package result:"
          ls -la "$PACKAGE_NAME"
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT

          # Show full file path and directory structure
          echo "\nFull file path:"
          pwd
          echo "\nDirectory structure:"
          tree || ls -R

      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          repository: Yevanchen/dify-plugins
          path: dify-plugins
          token: ${{ secrets.PLUGIN_ACTION }}
          fetch-depth: 1 # Fetch only the last commit to speed up checkout
          persist-credentials: true # Persist credentials for subsequent git operations

      - name: Prepare and create PR
        run: |
          # Debug info
          echo "Debug: Current directory $(pwd)"
          echo "Debug: Package name: $PACKAGE_NAME"
          ls -la

          # Move the packaged file to the target directory
          PACKAGE_NAME="exa-${{ steps.get_version.outputs.version }}.difypkg"
          mkdir -p dify-plugins/yevanchen/exa
          mv "$PACKAGE_NAME" dify-plugins/yevanchen/exa/

          # Enter the target repository directory
          cd dify-plugins

          # Configure git
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Ensure we have the full history (needed if fetch-depth was > 1 or if we need history)
          # git fetch --unshallow || git fetch # Uncomment if full history is needed

          # Ensure we are on the latest main branch
          git fetch origin main
          git checkout main
          git pull origin main

          # Create and switch to a new branch
          BRANCH_NAME="update-exa-plugin-${{ steps.get_version.outputs.version }}"
          git checkout -b "$BRANCH_NAME"

          # Add and commit changes
          git add yevanchen/exa/
          git status # for debugging
          git commit -m "Update exa plugin to version ${{ steps.get_version.outputs.version }}"

          # Push to remote (use force just in case the branch existed before from a failed run)
          git push -u origin "$BRANCH_NAME" --force

          # Confirm branch has been pushed and wait for sync (GitHub API might need a moment)
          git branch -a
          echo "Waiting for branch to sync..."
          sleep 10  # Wait 10 seconds for branch sync

      - name: Create PR via GitHub API
        env:
          GH_TOKEN: ${{ secrets.PLUGIN_ACTION }} # Use the provided token for authentication
        run: |
          gh pr create \
            --repo langgenius/dify-plugins \
            --head "Yevanchen:update-exa-plugin-${{ steps.get_version.outputs.version }}" \
            --base main \
            --title "Update exa plugin to version ${{ steps.get_version.outputs.version }}" \
            --body "Update exa plugin package to version ${{ steps.get_version.outputs.version }}

            Changes:
            - Updated plugin package file" || echo "PR already exists or creation skipped." # Handle cases where PR already exists

      - name: Print environment info
        run: |
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "Current directory contents:"
          ls -R
